<?xml version="1.0" encoding="utf-8"?>
<!-- Generated by Docutils 0.20.1 -->
<document>
    <paragraph>A few examples of xrefsect items support. </paragraph>
    <container classes="breathe-sectiondef" objtype="func">
        <rubric classes="breathe-sectiondef-title">Functions</rubric>
        <index entries="['single',\ 'unimplemented\ (C++\ function)',\ '_CPPv413unimplementedv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="unimplemented()" _toc_parts="unimplemented" classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">unimplemented</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of using Doxygen’s todo command. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><emphasis>Todo:</emphasis></desc_signature><desc_content><paragraph>Implement this function. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'buggy_function\ (C++\ function)',\ '_CPPv414buggy_functioni',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="buggy_function()" _toc_parts="buggy_function" classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">buggy_function</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">param</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of using Doxygen’s bug and test commands. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><emphasis>Bug:</emphasis></desc_signature><desc_content><paragraph>Does not work yet.</paragraph></desc_content></desc></paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><emphasis>Test:</emphasis></desc_signature><desc_content><paragraph>Add proper unit testing first. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'old_function\ (C++\ function)',\ '_CPPv412old_functionv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="old_function()" _toc_parts="old_function" classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">old_function</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of using Doxygen’s deprecated command. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><emphasis>Deprecated:</emphasis></desc_signature><desc_content><paragraph>Should not be used on new code. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'sample_xrefitem_function\ (C++\ function)',\ '_CPPv424sample_xrefitem_functionv',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="sample_xrefitem_function()" _toc_parts="sample_xrefitem_function" classes="sig sig-object cpp"><desc_signature_line><target></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">sample_xrefitem_function</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>An example of a custom Doxygen xrefitem declared as an ALIAS. </paragraph>
                <paragraph><desc domain="cpp" objtype="xrefsect"><desc_signature classes="sig sig-object cpp"><emphasis>xref Sample:</emphasis></desc_signature><desc_content><paragraph>This text shows up in the xref output. </paragraph></desc_content></desc></paragraph>
            </desc_content>
        </desc>
    </container>
</document>
