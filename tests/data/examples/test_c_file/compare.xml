<?xml version="1.0" encoding="utf-8"?>
<!-- Generated by Docutils 0.20.1 -->
<document>
    <container classes="breathe-sectiondef" objtype="define">
        <rubric classes="breathe-sectiondef-title">Defines</rubric>
        <index entries="['single',\ 'WRITE_TREE_MISSING_OK\ (C\ macro)',\ 'c.WRITE_TREE_MISSING_OK',\ '',\ None]"></index>
        <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
            <desc_signature _toc_name="" _toc_parts="" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a42df1800f897807468fd3fdf742c4745"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">WRITE_TREE_MISSING_OK</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>bitmasks to write_cache_as_tree flags </paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WRITE_TREE_IGNORE_CACHE_TREE\ (C\ macro)',\ 'c.WRITE_TREE_IGNORE_CACHE_TREE',\ '',\ None]"></index>
        <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
            <desc_signature _toc_name="" _toc_parts="" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a7b85da59ab3d6f1c9a7a6c8b3f19adfa"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">WRITE_TREE_IGNORE_CACHE_TREE</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WRITE_TREE_UNREADABLE_INDEX\ (C\ macro)',\ 'c.WRITE_TREE_UNREADABLE_INDEX',\ '',\ None]"></index>
        <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
            <desc_signature _toc_name="" _toc_parts="" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a27afc59e847e484dd134f67187406e43"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">WRITE_TREE_UNREADABLE_INDEX</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>error return codes </paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WRITE_TREE_UNMERGED_INDEX\ (C\ macro)',\ 'c.WRITE_TREE_UNMERGED_INDEX',\ '',\ None]"></index>
        <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
            <desc_signature _toc_name="" _toc_parts="" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a86746aa152184a1410df04218ce66aba"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">WRITE_TREE_UNMERGED_INDEX</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'WRITE_TREE_PREFIX_ERROR\ (C\ macro)',\ 'c.WRITE_TREE_PREFIX_ERROR',\ '',\ None]"></index>
        <desc classes="cpp macro" desctype="macro" domain="cpp" objtype="macro">
            <desc_signature _toc_name="" _toc_parts="" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1af66d5fa1a646a0a9eb4b479db94e8e74"></target><desc_name classes="sig-name descname"><desc_sig_name classes="n">WRITE_TREE_PREFIX_ERROR</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </container>
    <container classes="breathe-sectiondef" objtype="func">
        <rubric classes="breathe-sectiondef-title">Functions</rubric>
        <index entries="['single',\ 'cache_tree\ (C++\ function)',\ '_CPPv410cache_treev',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree()" _toc_parts="cache_tree" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a8ab0811af6c23825a0fa24d325597635"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_free\ (C++\ function)',\ '_CPPv415cache_tree_freePP10cache_tree',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_free()" _toc_parts="cache_tree_free" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1aa89195648ff7b3d15ddcd9b2d63926b2"></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_free</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_invalidate_path\ (C++\ function)',\ '_CPPv426cache_tree_invalidate_pathP10cache_treePKc',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_invalidate_path()" _toc_parts="cache_tree_invalidate_path" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a6b5668e76c5a046ab4eb54a36023581a"></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_invalidate_path</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">const</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_sub\ (C++\ function)',\ '_CPPv414cache_tree_subP10cache_treePKc',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_sub()" _toc_parts="cache_tree_sub" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a7f71270e6c6a51923f3fc2cf6da8904d"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv414cache_tree_subP10cache_treePKc" reftitle="cache_tree_sub"><desc_sig_name classes="n">cache_tree_sub</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_sub</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">const</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_write\ (C++\ function)',\ '_CPPv416cache_tree_writeP6strbufP10cache_tree',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_write()" _toc_parts="cache_tree_write" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1ac6b0b3cb12c1e417297ea50bc612d445"></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_write</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">strbuf</desc_sig_name><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_name classes="n sig-param">root</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_read\ (C++\ function)',\ '_CPPv415cache_tree_readPKcm',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_read()" _toc_parts="cache_tree_read" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a88f644692a9a603c759caa89a09d964f"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_read</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">const</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_name classes="n sig-param">buffer</desc_sig_name></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">unsigned</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">long</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">size</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_fully_valid\ (C++\ function)',\ '_CPPv422cache_tree_fully_validP10cache_tree',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_fully_valid()" _toc_parts="cache_tree_fully_valid" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a862c3fadc65eada50fe5e900429b430e"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_fully_valid</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_update\ (C++\ function)',\ '_CPPv417cache_tree_updateP10cache_treePP11cache_entryiii',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_update()" _toc_parts="cache_tree_update" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a794fd91db981f95821b61ff70d7b808c"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_update</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">cache_entry</desc_sig_name><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'write_cache_as_tree\ (C++\ function)',\ '_CPPv419write_cache_as_treePhiPKc',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="write_cache_as_tree()" _toc_parts="write_cache_as_tree" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a0a6ae162285559a7c9e1646c13baff4f"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">write_cache_as_tree</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">unsigned</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_name classes="n sig-param">sha1</desc_sig_name></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n sig-param">flags</desc_sig_name></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">const</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_keyword_type classes="kt">char</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_name classes="n sig-param">prefix</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'prime_cache_tree\ (C++\ function)',\ '_CPPv416prime_cache_treePP10cache_treeP4tree',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="prime_cache_tree()" _toc_parts="prime_cache_tree" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1aac021882bf9b584cba1dd2746f32d825"></target><desc_sig_keyword_type classes="kt">void</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">prime_cache_tree</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">tree</desc_sig_name><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ 'cache_tree_matches_traversal\ (C++\ function)',\ '_CPPv428cache_tree_matches_traversalP10cache_treeP10name_entryP13traverse_info',\ '',\ None]"></index>
        <desc classes="cpp function" desctype="function" domain="cpp" objtype="function">
            <desc_signature _toc_name="cache_tree_matches_traversal()" _toc_parts="cache_tree_matches_traversal" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a9d282a52f322bf17e11ae6e3aaa33761"></target><desc_sig_keyword_type classes="kt">int</desc_sig_keyword_type><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_matches_traversal</desc_sig_name></desc_name><desc_parameterlist><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_punctuation classes="p">*</desc_sig_punctuation></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">name_entry</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_name classes="n sig-param">ent</desc_sig_name></desc_parameter><desc_parameter noemph="True"><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_sig_name classes="n">traverse_info</desc_sig_name><desc_sig_space classes="w"> </desc_sig_space><desc_sig_punctuation classes="p">*</desc_sig_punctuation><desc_sig_name classes="n sig-param">info</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature_line></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
    </container>
    <container classes="breathe-sectiondef" objtype="var">
        <rubric classes="breathe-sectiondef-title">Variables</rubric>
        <index entries="['single',\ 'global_cache_tree\ (C++\ member)',\ '_CPPv417global_cache_tree',\ '',\ None]"></index>
        <desc classes="cpp var" desctype="var" domain="cpp" objtype="var">
            <desc_signature _toc_name="global_cache_tree" _toc_parts="global_cache_tree" classes="sig sig-object cpp"><desc_signature_line><target names="c__file_8h_1a9563e61e59c043530449f9b4da1d8ecf"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><reference internal="True" refid="_CPPv410cache_treev" reftitle="cache_tree"><desc_sig_name classes="n">cache_tree</desc_sig_name></reference><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">global_cache_tree</desc_sig_name></desc_name></desc_signature_line></desc_signature>
            <desc_content>
                <paragraph>Shared cache tree instance. </paragraph>
            </desc_content>
        </desc>
    </container>
    <index entries="['single',\ 'cache_tree_sub\ (C++\ struct)',\ '_CPPv414cache_tree_sub',\ '',\ None]"></index>
    <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
        <desc_signature _toc_name="cache_tree_sub" _toc_parts="cache_tree_sub" classes="sig sig-object cpp"><desc_signature_line><target names="structcache__tree__sub"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree_sub</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
        </desc_content>
    </desc>
    <index entries="['single',\ 'cache_tree\ (C++\ struct)',\ '_CPPv410cache_tree',\ '',\ None]"></index>
    <desc classes="cpp struct" desctype="struct" domain="cpp" objtype="struct">
        <desc_signature _toc_name="cache_tree" _toc_parts="cache_tree" classes="sig sig-object cpp"><desc_signature_line><target names="structcache__tree"></target><desc_sig_keyword classes="k">struct</desc_sig_keyword><desc_sig_space classes="w"> </desc_sig_space><desc_name classes="sig-name descname"><desc_sig_name classes="n">cache_tree</desc_sig_name></desc_name></desc_signature_line></desc_signature>
        <desc_content>
        </desc_content>
    </desc>
</document>
